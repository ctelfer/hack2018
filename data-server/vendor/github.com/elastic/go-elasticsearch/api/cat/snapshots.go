// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package cat

import (
	"net/http"
	"time"

	"github.com/elastic/go-elasticsearch/transport"
	"github.com/elastic/go-elasticsearch/util"
)

// SnapshotsOption is a non-required Snapshots option that gets applied to an HTTP request.
type SnapshotsOption func(r *transport.Request)

// WithSnapshotsFormat - a short version of the Accept header, e.g. json, yaml.
func WithSnapshotsFormat(format string) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsH - comma-separated list of column names to display.
func WithSnapshotsH(h []string) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsHelp - return help information.
func WithSnapshotsHelp(help bool) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsIgnoreUnavailable - set to true to ignore unavailable snapshots.
func WithSnapshotsIgnoreUnavailable(ignoreUnavailable bool) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsMasterTimeout - explicit operation timeout for connection to master node.
func WithSnapshotsMasterTimeout(masterTimeout time.Duration) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsS - comma-separated list of column names or column aliases to sort by.
func WithSnapshotsS(s []string) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsV - verbose mode. Display column headers.
func WithSnapshotsV(v bool) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsErrorTrace - include the stack trace of returned errors.
func WithSnapshotsErrorTrace(errorTrace bool) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsFilterPath - a comma-separated list of filters used to reduce the respone.
func WithSnapshotsFilterPath(filterPath []string) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsHuman - return human readable values for statistics.
func WithSnapshotsHuman(human bool) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsIgnore - ignores the specified HTTP status codes.
func WithSnapshotsIgnore(ignore []int) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsPretty - pretty format the returned JSON response.
func WithSnapshotsPretty(pretty bool) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// WithSnapshotsSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithSnapshotsSourceParam(sourceParam string) SnapshotsOption {
	return func(r *transport.Request) {
	}
}

// Snapshots - see https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html for more info.
//
// options: optional parameters.
func (c *Cat) Snapshots(options ...SnapshotsOption) (*SnapshotsResponse, error) {
	req := c.transport.NewRequest("GET")
	for _, option := range options {
		option(req)
	}
	resp, err := c.transport.Do(req)
	return &SnapshotsResponse{resp}, err
}

// SnapshotsResponse is the response for Snapshots.
type SnapshotsResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}

// DecodeBody decodes the JSON body of the HTTP response.
func (r *SnapshotsResponse) DecodeBody() (util.MapStr, error) {
	return transport.DecodeResponseBody(r.Response)
}
