// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"net/http"
	"time"

	"github.com/elastic/go-elasticsearch/transport"
	"github.com/elastic/go-elasticsearch/util"
)

// ShrinkOption is a non-required Shrink option that gets applied to an HTTP request.
type ShrinkOption func(r *transport.Request)

// WithShrinkMasterTimeout - specify timeout for connection to master.
func WithShrinkMasterTimeout(masterTimeout time.Duration) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkTimeout - explicit operation timeout.
func WithShrinkTimeout(timeout time.Duration) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkWaitForActiveShards - set the number of active shards to wait for on the shrunken index before the operation returns.
func WithShrinkWaitForActiveShards(waitForActiveShards string) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkBody - the configuration for the target index ("settings" and "aliases").
func WithShrinkBody(body map[string]interface{}) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkErrorTrace - include the stack trace of returned errors.
func WithShrinkErrorTrace(errorTrace bool) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkFilterPath - a comma-separated list of filters used to reduce the respone.
func WithShrinkFilterPath(filterPath []string) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkHuman - return human readable values for statistics.
func WithShrinkHuman(human bool) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkIgnore - ignores the specified HTTP status codes.
func WithShrinkIgnore(ignore []int) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkPretty - pretty format the returned JSON response.
func WithShrinkPretty(pretty bool) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// WithShrinkSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithShrinkSourceParam(sourceParam string) ShrinkOption {
	return func(r *transport.Request) {
	}
}

// Shrink - the shrink index API allows you to shrink an existing index into a new index with fewer primary shards. See https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html for more info.
//
// index: the name of the source index to shrink.
//
// target: the name of the target index to shrink into.
//
// options: optional parameters.
func (i *Indices) Shrink(index string, target string, options ...ShrinkOption) (*ShrinkResponse, error) {
	req := i.transport.NewRequest("PUT")
	for _, option := range options {
		option(req)
	}
	resp, err := i.transport.Do(req)
	return &ShrinkResponse{resp}, err
}

// ShrinkResponse is the response for Shrink.
type ShrinkResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}

// DecodeBody decodes the JSON body of the HTTP response.
func (r *ShrinkResponse) DecodeBody() (util.MapStr, error) {
	return transport.DecodeResponseBody(r.Response)
}
