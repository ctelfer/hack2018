// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"net/http"
	"time"

	"github.com/elastic/go-elasticsearch/transport"
	"github.com/elastic/go-elasticsearch/util"
)

// DeleteAliasOption is a non-required DeleteAlias option that gets applied to an HTTP request.
type DeleteAliasOption func(r *transport.Request)

// WithDeleteAliasMasterTimeout - specify timeout for connection to master.
func WithDeleteAliasMasterTimeout(masterTimeout time.Duration) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasTimeout - explicit timestamp for the document.
func WithDeleteAliasTimeout(timeout time.Duration) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasErrorTrace - include the stack trace of returned errors.
func WithDeleteAliasErrorTrace(errorTrace bool) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasFilterPath - a comma-separated list of filters used to reduce the respone.
func WithDeleteAliasFilterPath(filterPath []string) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasHuman - return human readable values for statistics.
func WithDeleteAliasHuman(human bool) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasIgnore - ignores the specified HTTP status codes.
func WithDeleteAliasIgnore(ignore []int) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasPretty - pretty format the returned JSON response.
func WithDeleteAliasPretty(pretty bool) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// WithDeleteAliasSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithDeleteAliasSourceParam(sourceParam string) DeleteAliasOption {
	return func(r *transport.Request) {
	}
}

// DeleteAlias - APIs in Elasticsearch accept an index name when working against a specific index, and several indices when applicable. See https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html for more info.
//
// index: a comma-separated list of index names (supports wildcards); use "_all" for all indices.
//
// name: a comma-separated list of aliases to delete (supports wildcards); use "_all" to delete all aliases for the specified indices.
//
// options: optional parameters.
func (i *Indices) DeleteAlias(index []string, name []string, options ...DeleteAliasOption) (*DeleteAliasResponse, error) {
	req := i.transport.NewRequest("DELETE")
	for _, option := range options {
		option(req)
	}
	resp, err := i.transport.Do(req)
	return &DeleteAliasResponse{resp}, err
}

// DeleteAliasResponse is the response for DeleteAlias.
type DeleteAliasResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}

// DecodeBody decodes the JSON body of the HTTP response.
func (r *DeleteAliasResponse) DecodeBody() (util.MapStr, error) {
	return transport.DecodeResponseBody(r.Response)
}
