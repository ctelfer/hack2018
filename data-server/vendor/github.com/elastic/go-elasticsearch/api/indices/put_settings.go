// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"net/http"
	"time"

	"github.com/elastic/go-elasticsearch/transport"
	"github.com/elastic/go-elasticsearch/util"
)

// PutSettingsOption is a non-required PutSettings option that gets applied to an HTTP request.
type PutSettingsOption func(r *transport.Request)

// WithPutSettingsIndex - a comma-separated list of index names; use "_all" or empty string to perform the operation on all indices.
func WithPutSettingsIndex(index []string) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsAllowNoIndices - whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes "_all" string or when no indices have been specified).
func WithPutSettingsAllowNoIndices(allowNoIndices bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// PutSettingsExpandWildcards - whether to expand wildcard expression to concrete indices that are open, closed or both.
type PutSettingsExpandWildcards int

const (
	// PutSettingsExpandWildcardsOpen can be used to set PutSettingsExpandWildcards to "open"
	PutSettingsExpandWildcardsOpen = iota
	// PutSettingsExpandWildcardsClosed can be used to set PutSettingsExpandWildcards to "closed"
	PutSettingsExpandWildcardsClosed = iota
	// PutSettingsExpandWildcardsNone can be used to set PutSettingsExpandWildcards to "none"
	PutSettingsExpandWildcardsNone = iota
	// PutSettingsExpandWildcardsAll can be used to set PutSettingsExpandWildcards to "all"
	PutSettingsExpandWildcardsAll = iota
)

// WithPutSettingsExpandWildcards - whether to expand wildcard expression to concrete indices that are open, closed or both.
func WithPutSettingsExpandWildcards(expandWildcards PutSettingsExpandWildcards) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsFlatSettings - return settings in flat format (default: false).
func WithPutSettingsFlatSettings(flatSettings bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsIgnoreUnavailable - whether specified concrete indices should be ignored when unavailable (missing or closed).
func WithPutSettingsIgnoreUnavailable(ignoreUnavailable bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsMasterTimeout - specify timeout for connection to master.
func WithPutSettingsMasterTimeout(masterTimeout time.Duration) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsPreserveExisting - whether to update existing settings. If set to "true" existing settings on an index remain unchanged, the default is "false".
func WithPutSettingsPreserveExisting(preserveExisting bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsErrorTrace - include the stack trace of returned errors.
func WithPutSettingsErrorTrace(errorTrace bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsFilterPath - a comma-separated list of filters used to reduce the respone.
func WithPutSettingsFilterPath(filterPath []string) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsHuman - return human readable values for statistics.
func WithPutSettingsHuman(human bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsIgnore - ignores the specified HTTP status codes.
func WithPutSettingsIgnore(ignore []int) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsPretty - pretty format the returned JSON response.
func WithPutSettingsPretty(pretty bool) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// WithPutSettingsSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithPutSettingsSourceParam(sourceParam string) PutSettingsOption {
	return func(r *transport.Request) {
	}
}

// PutSettings - change specific index level settings in real time. See https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html for more info.
//
// body: the index settings to be updated.
//
// options: optional parameters.
func (i *Indices) PutSettings(body map[string]interface{}, options ...PutSettingsOption) (*PutSettingsResponse, error) {
	req := i.transport.NewRequest("PUT")
	for _, option := range options {
		option(req)
	}
	resp, err := i.transport.Do(req)
	return &PutSettingsResponse{resp}, err
}

// PutSettingsResponse is the response for PutSettings.
type PutSettingsResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}

// DecodeBody decodes the JSON body of the HTTP response.
func (r *PutSettingsResponse) DecodeBody() (util.MapStr, error) {
	return transport.DecodeResponseBody(r.Response)
}
