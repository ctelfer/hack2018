// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"net/http"
	"time"

	"github.com/elastic/go-elasticsearch/transport"
	"github.com/elastic/go-elasticsearch/util"
)

// PutAliasOption is a non-required PutAlias option that gets applied to an HTTP request.
type PutAliasOption func(r *transport.Request)

// WithPutAliasMasterTimeout - specify timeout for connection to master.
func WithPutAliasMasterTimeout(masterTimeout time.Duration) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasTimeout - explicit timestamp for the document.
func WithPutAliasTimeout(timeout time.Duration) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasBody - the settings for the alias, such as "routing" or "filter".
func WithPutAliasBody(body map[string]interface{}) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasErrorTrace - include the stack trace of returned errors.
func WithPutAliasErrorTrace(errorTrace bool) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasFilterPath - a comma-separated list of filters used to reduce the respone.
func WithPutAliasFilterPath(filterPath []string) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasHuman - return human readable values for statistics.
func WithPutAliasHuman(human bool) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasIgnore - ignores the specified HTTP status codes.
func WithPutAliasIgnore(ignore []int) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasPretty - pretty format the returned JSON response.
func WithPutAliasPretty(pretty bool) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// WithPutAliasSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithPutAliasSourceParam(sourceParam string) PutAliasOption {
	return func(r *transport.Request) {
	}
}

// PutAlias - APIs in Elasticsearch accept an index name when working against a specific index, and several indices when applicable. See https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html for more info.
//
// index: a comma-separated list of index names the alias should point to (supports wildcards); use "_all" to perform the operation on all indices.
//
// name: the name of the alias to be created or updated.
//
// options: optional parameters.
func (i *Indices) PutAlias(index []string, name string, options ...PutAliasOption) (*PutAliasResponse, error) {
	req := i.transport.NewRequest("PUT")
	for _, option := range options {
		option(req)
	}
	resp, err := i.transport.Do(req)
	return &PutAliasResponse{resp}, err
}

// PutAliasResponse is the response for PutAlias.
type PutAliasResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}

// DecodeBody decodes the JSON body of the HTTP response.
func (r *PutAliasResponse) DecodeBody() (util.MapStr, error) {
	return transport.DecodeResponseBody(r.Response)
}
