// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package snapshot

import (
	"net/http"
	"time"

	"github.com/elastic/go-elasticsearch/transport"
	"github.com/elastic/go-elasticsearch/util"
)

// CreateRepositoryOption is a non-required CreateRepository option that gets applied to an HTTP request.
type CreateRepositoryOption func(r *transport.Request)

// WithCreateRepositoryMasterTimeout - explicit operation timeout for connection to master node.
func WithCreateRepositoryMasterTimeout(masterTimeout time.Duration) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryTimeout - explicit operation timeout.
func WithCreateRepositoryTimeout(timeout time.Duration) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryVerify - whether to verify the repository after creation.
func WithCreateRepositoryVerify(verify bool) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryErrorTrace - include the stack trace of returned errors.
func WithCreateRepositoryErrorTrace(errorTrace bool) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryFilterPath - a comma-separated list of filters used to reduce the respone.
func WithCreateRepositoryFilterPath(filterPath []string) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryHuman - return human readable values for statistics.
func WithCreateRepositoryHuman(human bool) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryIgnore - ignores the specified HTTP status codes.
func WithCreateRepositoryIgnore(ignore []int) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositoryPretty - pretty format the returned JSON response.
func WithCreateRepositoryPretty(pretty bool) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// WithCreateRepositorySourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithCreateRepositorySourceParam(sourceParam string) CreateRepositoryOption {
	return func(r *transport.Request) {
	}
}

// CreateRepository - the snapshot and restore module allows to create snapshots of individual indices or an entire cluster into a remote repository like shared file system, S3, or HDFS. See https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html for more info.
//
// repository: a repository name.
//
// body: the repository definition.
//
// options: optional parameters.
func (s *Snapshot) CreateRepository(repository string, body map[string]interface{}, options ...CreateRepositoryOption) (*CreateRepositoryResponse, error) {
	req := s.transport.NewRequest("PUT")
	for _, option := range options {
		option(req)
	}
	resp, err := s.transport.Do(req)
	return &CreateRepositoryResponse{resp}, err
}

// CreateRepositoryResponse is the response for CreateRepository.
type CreateRepositoryResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}

// DecodeBody decodes the JSON body of the HTTP response.
func (r *CreateRepositoryResponse) DecodeBody() (util.MapStr, error) {
	return transport.DecodeResponseBody(r.Response)
}
